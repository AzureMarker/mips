use crate::ast::*;
use std::str::FromStr;

grammar;

pub Program: Program = Item* => Program {
    items: <>.into_iter().flatten().collect()
};

Item: Option<Item> = {
    Comment => None,
    Constant => Some(Item::Constant(<>)),
    Directive => Some(Item::Directive(<>))
};

Comment: () = r"#.*";

Constant: Constant = <name:Identifier> "=" <value:r"[\+\-]?[0-9]+"> => Constant {
    name,
    value: i64::from_str(value).unwrap()
};

Directive: Directive = {
    ".text" => Directive::Text,
    ".data" => Directive::Data,
    ".globl" <name:Identifier> => Directive::Global { name }
};

Identifier: String = r"[a-zA-Z_]+" => <>.to_string();
