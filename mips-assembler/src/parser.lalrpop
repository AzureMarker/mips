use crate::ast::*;
use std::str::FromStr;

grammar;

pub Program: Program<'input> = Item* => Program {
    items: <>.into_iter().flatten().collect()
};

Item: Option<Item<'input>> = {
    Comment => None,
    Constant => Some(Item::Constant(<>)),
    Directive => Some(Item::Directive(<>))
};

Comment: () = r"#.*";

Constant: Constant<'input> = <name:Id> "=" <value:r"[\+\-]?[0-9]+"> => Constant {
    name,
    value: i64::from_str(value).unwrap()
};

Directive: Directive<'input> = "." <Id> => Directive(<>);

Id: &'input str = r"[a-zA-Z_]+";
